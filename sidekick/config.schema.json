{
  "$comment": "https://github.com/adobe/helix-config/blob/main/LICENSE.txt",
  "$id": "https://ns.adobe.com/helix/config/sidekick",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "sidekickPlugin": {
      "type": "object",
      "properties": {
        "badgeVariant": {
          "type": "string",
          "description": "The variant of the badge following the Adobe Spectrum badge variants",
          "enum": [
            "gray",
            "red",
            "orange",
            "yellow",
            "chartreuse",
            "celery",
            "green",
            "seafoam",
            "cyan",
            "blue",
            "indigo",
            "purple",
            "fuchsia",
            "magenta"
          ]
        },
        "containerId": {
          "type": "string",
          "description": "The ID of the container to add this plugin to"
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "any",
              "dev",
              "admin",
              "edit",
              "preview",
              "review",
              "live",
              "prod"
            ]
          },
          "description": "The environments to display this plugin in",
          "default": "any"
        },
        "event": {
          "type": "string",
          "description": "The name of a custom event to fire when the button is clicked (defaults to id)"
        },
        "excludePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Excludes the plugin from these paths",
          "examples": [
            "/foo/**",
            "**/:x:**"
          ]
        },
        "id": {
          "type": "string",
          "description": "The unique plugin ID"
        },
        "includePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Includes the plugin on these paths (overrides excludePaths)",
          "examples": [
            "/foo/bar/**",
            "**.docx**"
          ]
        },
        "isBadge": {
          "type": "boolean",
          "description": "Renders the plugin as a badge"
        },
        "isContainer": {
          "type": "boolean",
          "description": "Renders the plugin as a container for other plugins"
        },
        "isPalette": {
          "type": "boolean",
          "description": "Opens the URL in a palette instead of a new tab"
        },
        "isPopover": {
          "type": "boolean",
          "description": "Opens the URL in a popover instead of a new tab"
        },
        "paletteRect": {
          "type": "string",
          "description": "The dimensions and position of the palette (top, left, bottom, right, width, height)",
          "examples": [
            "top: 100px; right: 20px; width: 200px; height: 50vh"
          ]
        },
        "passConfig": {
          "type": "boolean",
          "description": "Append ref, repo, owner, host, and project as query params to the URL"
        },
        "passReferrer": {
          "type": "boolean",
          "description": "Append the referrer URL as a query param to the URL"
        },
        "pinned": {
          "type": "boolean",
          "description": "Renders the plugin in the bar (true, default) or the menu (false)"
        },
        "popoverRect": {
          "type": "string",
          "description": "The dimensions of the popover (width, height)",
          "examples": [
            "width: 400px; height: 300px"
          ]
        },
        "title": {
          "type": "string",
          "description": "The button text"
        },
        "titleI18n": {
          "type": "object",
          "description": "The button text in other supported languages",
          "patternProperties": {
            "^[a-z]{2}(-[A-Z]{2})?$": {
              "type": "string",
              "description": "ISO language code (`en` or `en-US`) with translated button text"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        },
        "url": {
          "type": "string",
          "description": "The URL to open when the button is clicked"
        }
      },
      "required": [
        "id"
      ],
      "dependentRequired": {
        "isPalette": [
          "url"
        ],
        "paletteRect": [
          "isPalette"
        ],
        "isPopover": [
          "url"
        ],
        "popoverRect": [
          "isPopover"
        ],
        "badgeVariant": [
          "isBadge"
        ]
      },
      "additionalProperties": false
    },
    "sidekickSpecialView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique view ID"
        },
        "path": {
          "type": "string",
          "description": "Open the special view on this path",
          "examples": [
            "/foo/**.json"
          ]
        },
        "viewer": {
          "type": "string",
          "description": "The URL of the special view. The resource path will be passed to it via 'path' parameter",
          "examples": [
            "/tools/sidekick/foo/index.html"
          ]
        }
      },
      "required": [
        "id",
        "path",
        "viewer"
      ],
      "additionalProperties": false
    }
  },
  "title": "Sidekick Config",
  "type": "object",
  "properties": {
    "editUrlLabel": {
      "type": "string",
      "description": "The label of the custom editing environment."
    },
    "editUrlPattern": {
      "type": "string",
      "description": "The URL pattern for the custom editing environment. Supports placeholders like {{contentSourceUrl}} or {{pathname}}."
    },
    "host": {
      "type": "string",
      "format": "idn-hostname",
      "description": "The host name of the production website (overrides cdn.prod.host)"
    },
    "liveHost": {
      "type": "string",
      "format": "idn-hostname",
      "description": "The host name of the live environment (overrides cdn.live.host, defaults to *.aem.live)"
    },
    "plugins": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/sidekickPlugin"
      }
    },
    "previewHost": {
      "type": "string",
      "format": "idn-hostname",
      "description": "The host name of the preview environment (overrides cdn.preview.host, defaults to *.aem.page)"
    },
    "project": {
      "type": "string",
      "description": "The name of the project to display in the sidekick"
    },
    "reviewHost": {
      "type": "string",
      "format": "idn-hostname",
      "description": "The host name of the review environment (overrides cdn.review.host, defaults to *.aem.reviews)"
    },
    "specialViews": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/sidekickSpecialView"
      }
    }
  },
  "additionalProperties": false
}